{"version":3,"file":"tenderly.types.contract.js","sourceRoot":"/","sources":["src/tenderly/tenderly.types.contract.ts"],"names":[],"mappings":";AAAA,sBAAsB;AACtB,kCAAkC;;AAmGlC,IAAK,cAQJ;AARD,WAAK,cAAc;IACjB,qCAAmB,CAAA;IACnB,+BAAa,CAAA;IACb,iCAAe,CAAA;IACf,iCAAe,CAAA;IACf,mCAAiB,CAAA;IACjB,+BAAa,CAAA;IACb,qCAAmB,CAAA;AACrB,CAAC,EARI,cAAc,KAAd,cAAc,QAQlB;AAED,IAAK,eAIJ;AAJD,WAAK,eAAe;IAClB,sCAAmB,CAAA;IACnB,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;AACrB,CAAC,EAJI,eAAe,KAAf,eAAe,QAInB;AAkBD,IAAK,eAIJ;AAJD,WAAK,eAAe;IAClB,6BAAU,CAAA;IACV,4CAAyB,CAAA;IACzB,gCAAa,CAAA;AACf,CAAC,EAJI,eAAe,KAAf,eAAe,QAInB;AAED,IAAK,OAIJ;AAJD,WAAK,OAAO;IACV,sCAA2B,CAAA;IAC3B,0BAAe,CAAA;IACf,gCAAqB,CAAA;AACvB,CAAC,EAJI,OAAO,KAAP,OAAO,QAIX;AA+BD,IAAK,IAGJ;AAHD,WAAK,IAAI;IACP,kBAAU,CAAA;IACV,+BAAuB,CAAA;AACzB,CAAC,EAHI,IAAI,KAAJ,IAAI,QAGR","sourcesContent":["// generated interface\n// tool: https://app.quicktype.io/\n\n// json: https://api.tenderly.co/api/v1/public-contracts/1/0xdac17f958d2ee523a2206206994597c13d831ec7\nexport interface TenderlyContract {\n  id: string\n  contract_id: string\n  balance: string\n  network_id: string\n  public: boolean\n  verified_by: string\n  verification_date: string // formatted Date\n  address: string\n  contract_name: string\n  ens_domain: null\n  type: string\n  standard: string\n  standards: string[]\n  token_data: TokenData\n  child_contracts: ChildContract[]\n  evm_version: string\n  compiler_version: string\n  optimizations_used: boolean\n  optimization_runs: number\n  libraries: null\n  compiler_settings: CompilerSettings\n  deployed_bytecode: string\n  creation_bytecode: string\n  data: Data\n  src_map: SrcMap\n  creation_block: number\n  creation_tx: string\n  creator_address: string\n  created_at: string // formatted Date\n  language: string\n  in_project: boolean\n}\n\n// json: https://api.tenderly.co/api/v1/account/LiFi/project/simulate/contract/1/0xdac17f958d2ee523a2206206994597c13d831ec7\nexport type TenderlyProjectContract = {\n  id: string\n  contract: TenderlyContract\n  account: TenderlyContract\n  project_id: string\n  previous_versions: null\n  details_visible: boolean\n  include_in_transaction_listing: boolean\n  display_name: string\n  account_type: string\n  verification_type: string\n  added_at: string // formatted Date\n}\n\ninterface ChildContract {\n  id: string\n  address: string\n  network_id: string\n}\n\ninterface CompilerSettings {\n  optimizer: Optimizer\n}\n\ninterface Optimizer {\n  enabled: boolean\n  runs: number\n}\n\ninterface Data {\n  main_contract: number\n  contract_info: ContractInfo[]\n  abi: ABI[]\n  raw_abi: RawABI[]\n  states: State[]\n}\n\ninterface ABI {\n  type: ABIType\n  name: string\n  constant: boolean\n  anonymous: boolean\n  stateMutability: StateMutability\n  inputs: ComponentElement[]\n  outputs: State[] | null\n}\n\ninterface ComponentElement {\n  name: string\n  type: NestedTypeType\n  storage_location: StorageLocation\n  offset: number\n  index: string\n  indexed: boolean\n  simple_type: Type\n}\n\ninterface Type {\n  type: NestedTypeType\n}\n\nenum NestedTypeType {\n  Address = 'address',\n  Bool = 'bool',\n  Bytes = 'bytes',\n  Slice = 'slice',\n  String = 'string',\n  Uint = 'uint',\n  Uint256 = 'uint256',\n}\n\nenum StorageLocation {\n  Default = 'default',\n  Memory = 'memory',\n  Storage = 'storage',\n}\n\nexport interface State {\n  name: string\n  type: string\n  storage_location: StorageLocation\n  offset: number\n  index: string\n  indexed: boolean\n  simple_type?: SimpleType\n  components?: ComponentElement[]\n}\n\ninterface SimpleType {\n  type: NestedTypeType\n  nested_type?: Type\n}\n\nenum StateMutability {\n  Empty = '',\n  Nonpayable = 'nonpayable',\n  View = 'view',\n}\n\nenum ABIType {\n  Constructor = 'constructor',\n  Event = 'event',\n  Function = 'function',\n}\n\ninterface ContractInfo {\n  id: number\n  path: string\n  name: string\n  source: string\n}\n\ninterface RawABI {\n  constant?: boolean\n  inputs: RawABIInput[]\n  name?: string\n  outputs?: Output[]\n  payable?: boolean\n  stateMutability?: StateMutability\n  type: ABIType\n  anonymous?: boolean\n}\n\ninterface RawABIInput {\n  name: string\n  type: NestedTypeType\n  indexed?: boolean\n}\n\ninterface Output {\n  name: Name\n  type: NestedTypeType\n}\n\nenum Name {\n  Empty = '',\n  Remaining = 'remaining',\n}\n\ntype SrcMap = object\n\ninterface TokenData {\n  symbol: string\n  name: string\n  decimals: number\n}\n"]}